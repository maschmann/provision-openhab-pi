---

- name: openhab | Ensure openhab key is present
  apt_key:
    url: "https://bintray.com/user/downloadSubjectPublicKey?username=openhab"
    state: present

- name: openhab | Ensure openhab repo is added
  apt_repository:
    repo: "deb https://dl.bintray.com/openhab/apt-repo2 stable main"
    state: present

- name: openhab | Install packages
  apt:
    name:
      - openhab
      - openhab-addons
      - mosquitto
    state: latest

- name: openhab | Ensure configs are in place
  template:
    src: "{{item.src}}"
    dest: "/etc/openhab/{{item.dest}}"
    owner: openhab
    group: openhab
  with_items:
    - { src: influxdb.persist.j2, dest: persistence/influxdb.persist }
    - { src: influxdb.cfg.j2, dest: services/influxdb.cfg }
    - { src: addons.cfg.j2, dest: services/addons.cfg }

- name: add custom packages for installation, if set
  lineinfile:
    path: /etc/openhab/services/addons.cfg
    regexp: "{{item.regexp}}"
    line: "{{item.line}}"
  with_items:
    - { regexp: '#binding =', line: "{{openhab_install_bindings}}"}
    - { regexp: '#persistence =', line: "{{openhab_install_persistence}}"}
    - { regexp: '#action =', line: "{{openhab_install_actions}}"}
    - { regexp: '#transformation =', line: "{{openhab_install_transformations}}"}
    - { regexp: '#misc =', line: "{{openhab_install_misc}}"}

- name: openhab | Enable service and start
  service:
    name: openhab
    enabled: yes
    state: started

- name: Check for custom nginx config
  local_action: stat path="{{playbook_dir}}/user-settings/openhab.conf.j2"
  become: False
  register: openhab_custom_nginx_file

- name: Create nginx config with default template
  template:
    src: "{{playbook_dir}}/user-settings/openhab.conf.j2.dist"
    dest: /etc/nginx/sites-available/openhab.conf
  when: openhab_custom_nginx_file.stat.exists == false

- name: Create nginx config with custom file
  template:
    src: "{{playbook_dir}}/user-settings/openhab.conf.j2"
    dest: /etc/nginx/sites-available/openhab.conf
  when: openhab_custom_nginx_file.stat.exists